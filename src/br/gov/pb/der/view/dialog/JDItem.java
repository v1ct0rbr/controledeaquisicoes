/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.gov.pb.der.view.dialog;

import br.gov.pb.der.dao.factory._DAOFactory;
import br.gov.pb.der.dao.interfaces.SetorDao;
import br.gov.pb.der.modelo.ItemNota;
import br.gov.pb.der.services.MessageService;
import br.gov.pb.der.utils.Funcoes;
import br.gov.pb.der.utils.JTextFieldLimit;
import br.gov.pb.der.view.Principal;
import br.gov.pb.der.view.internal.JIFcad_Notafiscal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;

/**
 *
 * @author victo
 */
public class JDItem extends javax.swing.JDialog {

    /**
     * Creates new form JDItem
     */
    public static JDItem jdItem;

    private SetorDao daoSetor = _DAOFactory.getFactory().getSetorDao();
    ItemNota itemNota = new ItemNota();
//    private NotaFiscal notafiscal;

    public static JDItem getInstance() {
        if (jdItem == null) {
            jdItem = new JDItem(Principal.getInstance(), true);
            jdItem.setLocationRelativeTo(null);
            jdItem.setTitle("Adicionar Item");
        }
        return jdItem;
    }

    public JDItem() {
        initComponents();
    }

    public JDItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jtfItemNome.setDocument(new JTextFieldLimit(100));
        jtfItemValor.setDocument(new JTextFieldLimit(15));
        jtfItemQuantidade.setDocument(new JTextFieldLimit(10));

        carregaSetores();
    }

    public void carregaSetores() {
        List<String> setoresCombo = new ArrayList<>();
        setoresCombo = daoSetor.findAllCombo();
        jcbItemSetor.removeAllItems();
        jcbItemSetor.addItem("Selecione");
        for (String set : setoresCombo) {
            jcbItemSetor.addItem(set);
        }
        if (itemNota.getSetorDestino() != null) {
            jcbItemSetor.setSelectedItem(itemNota.getSetorDestino().getId() + "-" + itemNota.getSetorDestino().getNome());
        }
        JIFcad_Notafiscal.getInstance().carregaSetores();
    }

    public void formatarValor() {
        if (!jtfItemValor.getText().trim().isEmpty()) {
            try {
                Funcoes.formatMoedaFloat(jtfItemValor.getText().trim());
            } catch (NumberFormatException ex) {
                MessageService.errorMessage("Erro na formatação do valor", "Erro", this);
            }
        }
    }

    public void limparFormularioItem() {
        jtfItemValor.setText("");
        jtfItemNome.setText("");

        jcbItemSetor.setSelectedIndex(0);
        jtfItemQuantidade.setText("");
    }

    public boolean validarCamposItem() {
        String erros = "";
        boolean camposValidos = true;
        if (jtfItemNome.getText().trim().isEmpty()) {
            erros += "- O nome do item deve ser fornecido\n";
        }
        if (jtfItemQuantidade.getText().trim().isEmpty()) {
            erros += "- A quantidade não pode ser vazia.\n";
        } else {
            try {
                int teste = Integer.parseInt(jtfItemQuantidade.getText());
            } catch (NumberFormatException ex) {
                erros += "- Quantidade deve ser um número inteiro.\n";
            }
        }
        if (jtfItemValor.getText().trim().isEmpty()) {
            erros += "- Forneça o valor do item.\n";
        } else {
            try {
                double teste = Funcoes.formatMoedaFloat(jtfItemValor.getText());
            } catch (NumberFormatException ex) {
                erros += "- O valor deve ser numérico ou decimal.\n";
            }
        }

        if (!erros.isEmpty()) {
            MessageService.errorMessage("Campos obrigatórios não informados: \n\n" + erros, "Erros foram encontrados", this);
            camposValidos = false;
        }
        return camposValidos;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel15 = new javax.swing.JLabel();
        jtfItemNome = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jcbItemSetor = new javax.swing.JComboBox<String>();
        jbtItemRecarregarSetores = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jtfItemQuantidade = new javax.swing.JTextField();
        jbtItemAdicionar = new javax.swing.JButton();
        jbtItemLimpar = new javax.swing.JButton();
        jtfItemValor = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Descrição");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Setor de Destino:");

        jbtItemRecarregarSetores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/pb/der/images/icons/refresh.png"))); // NOI18N
        jbtItemRecarregarSetores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtItemRecarregarSetoresActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Valor:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Quantidade");

        jbtItemAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/pb/der/images/icons/add.png"))); // NOI18N
        jbtItemAdicionar.setText("Inserir");
        jbtItemAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtItemAdicionarActionPerformed(evt);
            }
        });

        jbtItemLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/gov/pb/der/images/icons/clean.png"))); // NOI18N
        jbtItemLimpar.setText("Limpar campos");
        jbtItemLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtItemLimparActionPerformed(evt);
            }
        });

        jtfItemValor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jtfItemValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtItemAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 346, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbtItemLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfItemNome, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtfItemValor, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtfItemQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jcbItemSetor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtItemRecarregarSetores)))
                        .addGap(29, 29, 29))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfItemNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtItemRecarregarSetores, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbItemSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jtfItemQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfItemValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtItemAdicionar)
                    .addComponent(jbtItemLimpar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtItemRecarregarSetoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtItemRecarregarSetoresActionPerformed
        // TODO add your handling code here:
        carregaSetores();
    }//GEN-LAST:event_jbtItemRecarregarSetoresActionPerformed

    private void jbtItemAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtItemAdicionarActionPerformed
        // TODO add your handling code here:

        if (validarCamposItem()) {
//            if (itemNota == null) {
//                itemNota = new ItemNota();
//            }
//            itemNota.setId((!jtfItemCod.getText().isEmpty() ? Long.parseLong(jtfItemCod.getText()) : null));
//            itemNota.setNome(jtfItemNome.getText());
//            if (jcbItemSetor.getSelectedIndex() > 0) {
//                Setor setor = new Setor();
//                daoSetor.open();ç gnhyw
//                setor = daoSetor.findById(Integer.parseInt(jtfItemSetorCod.getText()));
//                if (setor != null) {
//                    itemNota.setSetorDestino(setor);
//                    itemNota.setSetorDestinoTemp(setor.getId() + "-" + setor.getNome());
//                }
//            }
//            itemNota.setQuantidade(Integer.parseInt(jtfItemQuantidade.getText()));
//            itemNota.setValor(Funcoes.formatMoedaFloat(jtfItemValor.getText()));
//            if (JIFcad_Notafiscal.getNotafiscal().getItens() == null) {
//                JIFcad_Notafiscal.getNotafiscal().setItens(new ArrayList<>());
//            }
//            JIFcad_Notafiscal.getNotafiscal().getItens().add(itemNota);
//            JIFcad_Notafiscal.valorTotal += itemNota.getQuantidade() * itemNota.getValor();
//            JIFcad_Notafiscal.jlbValorTotal.setText("R$ " + JIFcad_Notafiscal.valorTotal);
            Object[] itemObject = new Object[JIFcad_Notafiscal.QUANT_COLUMNS_TB_ITENS];
            itemObject[0] = ("-");
            itemObject[1] = jtfItemNome.getText();
            itemObject[2] = jcbItemSetor.getSelectedIndex() > 0 ? jcbItemSetor.getSelectedItem().toString() : "Selecione";
            itemObject[3] = jtfItemQuantidade.getText().trim();
//            itemObject[4] = Funcoes.formatMoedaFloat(jtfItemValor.getText());
            itemObject[4] = jtfItemValor.getText();
            JIFcad_Notafiscal.adicionarItem(itemObject);
            this.dispose();
        }
    }//GEN-LAST:event_jbtItemAdicionarActionPerformed

    private void jbtItemLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtItemLimparActionPerformed
        // TODO add your handling code here:
        limparFormularioItem();
    }//GEN-LAST:event_jbtItemLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDItem dialog = new JDItem(new JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JButton jbtItemAdicionar;
    private javax.swing.JButton jbtItemLimpar;
    private javax.swing.JButton jbtItemRecarregarSetores;
    private javax.swing.JComboBox<String> jcbItemSetor;
    private javax.swing.JTextField jtfItemNome;
    private javax.swing.JTextField jtfItemQuantidade;
    private javax.swing.JFormattedTextField jtfItemValor;
    // End of variables declaration//GEN-END:variables
}
